plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'spring-boot-Jakarta'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'jakarta.json:jakarta.json-api:2.1.2'
	implementation 'jakarta.transaction:jakarta.transaction-api:2.0.0'
	implementation 'jakarta.security.enterprise:jakarta.security.enterprise-api:3.0.0'
	implementation 'jakarta.enterprise.concurrent:jakarta.enterprise.concurrent-api:3.0.0'
	implementation 'jakarta.batch:jakarta.batch-api:2.1.0'
	implementation 'jakarta.jms:jakarta.jms-api:3.1.0'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Lombok (Optional - Reduces Boilerplate Code)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL Connector (Latest)
	runtimeOnly 'com.mysql:mysql-connector-j'
}

tasks.named('test') {
	useJUnitPlatform()
}
